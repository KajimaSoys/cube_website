# Generated by Django 4.1.7 on 2023-05-22 13:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phone_field.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70, unique=True, verbose_name='Название категории')),
                ('slug', models.SlugField(max_length=70, unique=True)),
                ('image_cat', models.ImageField(upload_to='shop/images_cat', verbose_name='Фотография категории')),
            ],
            options={
                'verbose_name': 'Категории',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_product', models.CharField(max_length=100, verbose_name='Имя товара')),
                ('description', models.TextField(help_text='Введите подробное описание товара', verbose_name='Описание товара')),
                ('size', models.CharField(max_length=30, verbose_name='Размеры Товара')),
                ('brand_of_cardboard', models.CharField(max_length=50, verbose_name='Материал')),
                ('price_1', models.FloatField(verbose_name='Цена от 1')),
                ('image', models.ImageField(upload_to='shop/images', verbose_name='Фотография товара')),
                ('in_stock', models.BooleanField(verbose_name='В наличии')),
                ('my_order', models.PositiveIntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.category', verbose_name='Выберите категорию товара')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'ordering': ['my_order'],
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', phone_field.models.PhoneField(blank=True, help_text='Номер телефона заказчика', max_length=31)),
                ('name', models.CharField(blank=True, max_length=30, verbose_name='ФИО')),
                ('created', models.DateTimeField(verbose_name='Дата создания ')),
                ('address', models.CharField(default='Чистопольская ул. 7, Казань', max_length=70, verbose_name='Адресс доставки')),
                ('products', models.ManyToManyField(related_name='orders', to='shop.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'default_permissions': ('delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('products', models.ManyToManyField(related_name='product_basket', to='shop.product', verbose_name='Товары добавленные в корзину')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Корзина',
                'verbose_name_plural': 'Корзины',
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name_product'], name='shop_produc_name_pr_edfda1_idx'),
        ),
    ]
